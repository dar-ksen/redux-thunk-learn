{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/postsReducer.js","reducers/usersReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","title","body","renderList","getState","_","chain","uniq","forEach","value","App","postsReducer","action","usersReducer","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"8OAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCUEC,EAAa,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHpB,2CAAN,uDAMbC,EAAY,SAACC,GAAD,8CAAQ,WAAOT,GAAP,eAAAC,EAAA,sEACRC,EAAgBC,IAAhB,iBAA8BM,IADtB,OACzBL,EADyB,OAG/BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHlB,2CAAR,uD,OChBnBG,E,4JACJ,WACE,IAAQC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAGE,qBAAKG,UAAU,SAAf,SAAyBH,EAAKI,OAF5B,iD,GALYC,IAAMC,WAehBC,eAJS,SAACC,EAAOC,GAC9B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,MAAK,SAACX,GAAD,OAAUA,EAAKF,KAAOW,EAASG,aAGlDL,CAAyBR,GCblCc,E,uKACJ,WACEZ,KAAKC,MAAMY,uB,wBAGb,WACE,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAACC,GAC3B,OACE,sBAAKd,UAAU,OAAf,UACE,mBAAGA,UAAU,mCACb,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6BAAKc,EAAKC,QACV,4BAAID,EAAKE,UAEX,cAAC,EAAD,CAAYP,OAAQK,EAAKL,cAPFK,EAAKnB,S,oBActC,WACE,OAAO,qBAAKK,UAAU,0BAAf,SAA0CF,KAAKmB,mB,GAvBnCf,IAAMC,WA+BdC,eAJS,SAACC,GACvB,MAAO,CAAEO,MAAOP,EAAMO,SAGgB,CAAED,mBFjCR,yDAAM,WAAOzB,EAAUgC,GAAjB,SAAA/B,EAAA,sEAChCD,EAASD,KADuB,OAGtCkC,IAAEC,MAAMF,IAAWN,OAChBC,IAAI,UACJQ,OACAC,SAAQ,SAAC3B,GAAD,OAAQT,EAASQ,EAAUC,OACnC4B,QAPmC,2CAAN,0DEiCnBnB,CAAiDM,GCzBjDc,EARH,WACV,OACE,qBAAKxB,UAAU,eAAf,SACE,cAAC,EAAD,OCESyB,EARM,WAAyB,IAAxBpB,EAAuB,uDAAf,GAAIqB,EAAW,uCAC3C,MACO,gBADCA,EAAOnC,KAEJmC,EAAOlC,QAEPa,G,QCIEsB,EATM,WAAyB,IAAxBtB,EAAuB,uDAAf,GAAIqB,EAAW,uCAC3C,MACO,eADCA,EAAOnC,KAEL,GAAN,mBAAWc,GAAX,CAAkBqB,EAAOlC,UAElBa,GCDEuB,cAAgB,CAC7BhB,MAAOa,EACPlB,MAAOoB,ICGHE,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,cAAc,Y","file":"static/js/main.c0e1ec93.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com'\n});\n","import _ from \"lodash\";\nimport jsonPlaceholder from \"../apis/jsonPlaceholder\";\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts)\n    .map(\"userId\")\n    .uniq()\n    .forEach((id) => dispatch(fetchUser(id)))\n    .value();\n};\n\nexport const fetchPosts = () => async (dispatch) => {\n  const response = await jsonPlaceholder.get(\"/posts\");\n\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\n};\n\nexport const fetchUser = (id) => async (dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\n};\n\n// export const fetchUser = (id) => (dispatch) => _fetchUser(id, dispatch);\n\n// const _fetchUser = _.memoize(async (id, dispatch) => {\n//   const response = await jsonPlaceholder.get(`/users/${id}`);\n\n//   dispatch({ type: \"FETCH_USER\", payload: response.data });\n// });\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserHeader extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    if (!user) {\r\n      return <div>Loading...</div>;\r\n    }\r\n    return <div className=\"header\">{user.name}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { user: state.users.find((user) => user.id === ownProps.userId) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPostsAndUsers } from \"../actions\";\nimport UserHeader from \"./UserHeader\";\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPostsAndUsers();\n  }\n\n  renderList() {\n    return this.props.posts.map((post) => {\n      return (\n        <div className=\"item\" key={post.id}>\n          <i className=\"large middle aligned icon user\" />\n          <div className=\"content\">\n            <div className=\"description\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n            <UserHeader userId={post.userId} />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { posts: state.posts };\n};\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\n","import React from 'react';\nimport PostList from './PostList';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <PostList />\n    </div>\n  );\n};\n\nexport default App;\n","const postsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default postsReducer;","const usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_USER\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from \"redux\";\nimport postsReducer from \"./postsReducer\";\nimport usersReducer from \"./usersReducer\";\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: usersReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}